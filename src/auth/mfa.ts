import { auth } from './firebaseAuth'; import { multiFactor, getMultiFactorResolver, TotpMultiFactorGenerator } from 'firebase/auth'; export async function startTotpEnrollment(){ const u=auth().currentUser; if(!u) throw new Error('Sign in first'); const mf=multiFactor(u); const session=await mf.getSession(); const s=await TotpMultiFactorGenerator.generateSecret(session); const secret=s.secretKey; const qrCodeUrl=s.qrCodeUrl; return { secret, qrCodeUrl, finalize: async (code:string)=>{ const cred=TotpMultiFactorGenerator.credential({ secretKey: secret, oneTimePassword: code }); await mf.enroll(cred,'Authenticator'); } }; } export async function resolveMfaSignIn(err:any, codeProvider:()=>Promise<{factorId:string,code:string}>){ const res=getMultiFactorResolver(auth(),err); const {factorId,code}=await codeProvider(); if(factorId==='totp'){ const hint:any=res.hints[0]; const cred=TotpMultiFactorGenerator.credential({ oneTimePassword: code, enrollmentId: hint.uid }); return await res.resolveSignIn(cred as any);} throw new Error('Unsupported factor'); }
